#Calculate residual by substracting sinusoid from data
residuals = heights - fitted_heights

plt.style.use("./astr19_matplotlib_defaults.txt")

plt.errorbar(decimal_days,residuals,yerr=0.25,fmt='o',label='Residuals')
plt.xlabel('Decimal Day')
plt.ylabel('Time Height Residuals (ft)')
plt.title('Residuals')
plt.legend()
plt.grid()
plt.show()

residual_mean = np.mean(residuals)
residual_std = np.std(residuals)
print(f'Mean of residuals = {residual_mean}')
print(f'RMS of residual = {residual_std}')

def gaussian(x,mu,s):
    return 1./(2.*np.pi*s**2)**0.5 * np.exp(-0.5*((x-mu)/s)**2)

plt.style.use("./astr19_matplotlib_defaults.txt")

plt.hist(residuals,bins=15,range=(-3.5,3.5),alpha=0.5,edgecolor='white',density=True)
std_line = np.linspace(-5*residual_std,5*residual_std,1000)
plt.plot(std_line,gaussian(std_line,residual_mean,residual_std),color='red')
plt.xlabel('Residuals (ft)')
plt.ylabel('Density')
plt.title('Residual Histogram and Gaussian')
plt.text(1.5,0.4,r'$\sigma = 0.914$',color='black')
plt.grid()
plt.savefig('Residual_histogram.pdf',dpi=100,format='pdf',bbox_inches='tight')

squared_dev = sum([(i-residual_mean)**2 for i in residuals])
standard_dev = (squared_dev/len(residuals))**0.5
print(f'Standard deviation = {standard_dev}')
#Mathematical solution for stanrad deviation. Gives the same result as np.std(residuals)

#To estimate the intrinsic scatter, use the following equation: (standard_dev)**2 = (yerr)**2 + (intrinsic_scatter)**2
#Rearrange the equation to solve for the intrinsic scatter. instrinsic_scatter = (standard_dev**2 - yerr**2)**0.5
yerr=0.25
intrinsic_scatter = (standard_dev**2 - yerr**2)**0.5
print(intrinsic_scatter)
if intrinsic_scatter > yerr:
    print(f'The scatter in data ({intrinsic_scatter}) is larger than the assumed experminetal error ({yerr})')
else:
    print(f'The assumed experimental error ({yerr}) is larger than the assumed scatter in the data ({intrinsic_scatter})')
